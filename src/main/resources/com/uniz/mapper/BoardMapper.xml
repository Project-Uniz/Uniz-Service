<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.uniz.mapper.BoardMapper">
	
	<sql id="criteria">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach item='type' collection="typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type == 'T'.toString()">
							a.title like '%' ||#{keyword}|| '%'
						</when>
						<when test="type == 'C'.toString()">
							a.postcontent like '%' ||#{keyword}|| '%'
						</when>
						<when test="type == 'W'.toString()">
							a.nick like '%' ||#{keyword}|| '%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>	
	
<select id="getAllPost" resultType="com.uniz.domain.BoardVO">
  <![CDATA[
	select  *
    	from(
            select rownum rn , a.*
            from
            	(
            	select
           		p.postsn , p.title , p.createdatetime , u.usersn , u.nick , b.boardcomment
            	from boardpost p ,  userdata u , board b
    			where u.usersn = p.usersn 
    			and b.boardsn = p.boardsn
    			order by p.postsn desc
    			)a
  ]]>	
				
  <![CDATA[
		where rownum <= #{cri.pageNum} * #{cri.amount}
			)
	where rn > (#{cri.pageNum} -1 ) * #{cri.amount}
  ]]>
</select>

			
	
	
	<select id="getTotalCount" resultType="int">
		
		select count(*) from boardpost 
		
	</select>
	
	<select id="getTotalCountByBoard" resultType="int">
		
		select count(boardsn) from boardpost where boardsn = #{boardSN}
		
	</select>
	
	<select id="getList"  resultType="com.uniz.domain.BoardVO">
		
		<![CDATA[
			select p.postsn, p.title, c.postcontent, p.createDateTime , u.nick
			from boardpost p , boardpostcontent c , userdata u
			where p.postsn = c.postsn and u.usersn = p.usersn
			order by p.postsn desc
		]]>
		
	</select>
	
	<select id="getBoardList" resultType="com.uniz.domain.BoardVO">
		select boardsn , boardtitle, boardcomment, createdatetime
		from board
	</select>
	
	<select id="getPostList" resultType="com.uniz.domain.BoardVO">
	<![CDATA[
		select *
		from (
			select rownum rn , a.*
			from
				(
				select b.boardsn , p.postsn , p.title, p.createdatetime , b.boardComment, u.nick
				from board b , boardpost p , userdata u
				where b.boardsn = #{boardSN}
				and b.boardsn = p.boardsn
				and u.usersn = p.usersn
				order by p.postsn desc
				) a
				where
	]]>	
	<![CDATA[
	  	rownum <= #{cri.pageNum} * #{cri.amount}
	  	)
	  	where rn > (#{cri.pageNum} -1 ) * #{cri.amount}
	  ]]>	
	</select>
	
	<select id="read" resultType="com.uniz.domain.BoardVO">
		
			select p.postSN, p.boardsn ,u.nick, p.title, c.postcontent, p.createdatetime , p.userSN, b.boardcomment
			from boardpost p , boardpostcontent c , userdata u , board b
			where p.postSN = #{postSN} 
			and p.postsn = c.postsn 
			and u.usersn = p.usersn
			and b.boardsn = p.boardsn
			
	</select>
	
	<insert id="insertPost">
		<selectKey keyProperty="postSN" order="BEFORE" resultType="long">
			select boardpost_seq.nextval from dual
		</selectKey>
		insert into boardpost
		(postSN, userSN, title , boardSN)
		values 
		(#{postSN}, #{userSN} , #{title} , #{boardSN} )
	</insert>
	
	<insert id="insertCont">
	
		insert into boardpostcontent 
		(postSN , postcontent)
		values
		(#{postSN} , #{postContent} )
	
	</insert>
	
	<delete id="deletePost">
		delete from boardpost where postSN = #{postSN}
	</delete>
	
	<delete id="deleteCont">
		delete from boardpostcontent where postSN = #{postSN}
	</delete>
	
	<delete id="deleteReply">
		delete from boardpostreply where postSN = #{postSN}
	</delete>
	
	<update id="updatePost" parameterType="com.uniz.domain.BoardVO">
		update boardpost
		set title = #{title},
		updatedatetime = sysdate
		where postSN = #{postSN}
	</update>
	
	<update id="updateCont" parameterType="com.uniz.domain.BoardVO">
		update boardpostcontent
		set postContent = #{postContent}
		where postSN = #{postSN}		
	</update>
	
</mapper>